'use strict';var assert = require('chai').assert;
var expect = require('chai').expect;
var workflowType = require('./workflowConstant');
var _ = require('lodash');

describe('discoverWorkFlowNames', function () {
  var campaignWorkflowNames = [
  'SupplierOnboarding'];


  var campaignTransitionsNames = [
  'queued',
  'sent',
  'read',
  'loaded',
  'onboarded',
  'bounced'];


  it('works with the same field names', function () {
    var workflowNames = workflowType.getWorkflowTypes();
    assert.equal(_.size(workflowNames), _.size(campaignWorkflowNames));
  });


  it('works with possible transition', function () {
    var workFlowNames = 'SupplierOnboarding';
    var currentTransitionState = 'queued';
    var transitions = workflowType.getPossibleTransitions(workFlowNames, currentTransitionState);
    assert.equal(_.size(transitions), _.size(campaignTransitionsNames));
  });


  it('returns undefined values for wrong workflow names', function () {
    var invalidWorkFlowNames = 'invalid';
    var currentTransitionState = 'read';
    var fieldMapping = workflowType.getPossibleTransitions(invalidWorkFlowNames, currentTransitionState);
    expect(fieldMapping).to.be.undefined;
  });
});