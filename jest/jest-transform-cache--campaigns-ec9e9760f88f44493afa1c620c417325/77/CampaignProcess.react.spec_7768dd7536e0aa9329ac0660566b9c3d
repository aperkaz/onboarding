'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _sinon = require('sinon');var _sinon2 = _interopRequireDefault(_sinon);
var _reactRedux = require('react-redux');
var _reactRouter = require('react-router');
var _load = require('../../client/actions/campaignContacts/load');
var _start = require('../../client/actions/campaigns/start');
var _intlEnzymeTestHelper = require('../helpers/intl-enzyme-test-helper.js');
var _StartModal = require('../../client/components/common/StartModal.react');var _StartModal2 = _interopRequireDefault(_StartModal);
var _Thumbnail = require('../../client/components/common/Thumbnail.react');var _Thumbnail2 = _interopRequireDefault(_Thumbnail);
var _CampaignProcess = require('../../client/containers/CampaignProcess.react');var _CampaignProcess2 = _interopRequireDefault(_CampaignProcess);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var storeFake = function storeFake(state) {return {
    default: function _default() {},
    subscribe: function subscribe() {},
    dispatch: function dispatch() {},
    getState: function getState() {return _extends({}, state);} };};


describe('<CampaignProcess />', function () {
  var paths = void 0;
  var numberOfButton = void 0;
  var rowClass = void 0;
  var divs = void 0;
  var thumbnails = void 0;
  var startModals = void 0;
  var startModalState = void 0;

  beforeEach(function () {
    var store = storeFake({
      campaignContactList: {
        campaignContacts: [
        {
          campaignId: 1,
          email: 'karan@cronj.com',
          status: 'new',
          company: 'CronJ',
          firstName: 'Karan',
          lastName: 'Patiyal',
          telephone: '5678765434' },

        {
          campaignId: 2,
          email: 'test@cronj.com',
          status: 'new',
          company: 'CronJ',
          firstName: 'first',
          lastName: 'last',
          telephone: '7654321234' }] } });





    var props = {};

    var wrapper = (0, _intlEnzymeTestHelper.mountWithIntl)(
    _react2.default.createElement(_reactRedux.Provider, { store: store },
      _react2.default.createElement(_CampaignProcess2.default, props)),
    { context: {
        locale: 'en',
        formatPatterns: {
          de: {
            datePattern: "dd.MM.yyyy",
            integerPattern: "#,##0",
            numberDecimalSeparator: ".",
            numberGroupingSeparator: ",",
            numberGroupingSeparatorUse: true,
            numberPattern: "#,##0.00" },

          en: {
            datePattern: "MM/dd/yyyy",
            integerPattern: "#,##0",
            numberDecimalSeparator: ".",
            numberGroupingSeparator: ",",
            numberGroupingSeparatorUse: true,
            numberPattern: "#,##0.00" } } },


      childContextTypes: {
        locale: 'en',
        formatPatterns: {
          de: {
            datePattern: "dd.MM.yyyy",
            integerPattern: "#,##0",
            numberDecimalSeparator: ".",
            numberGroupingSeparator: ",",
            numberGroupingSeparatorUse: true,
            numberPattern: "#,##0.00" },

          en: {
            datePattern: "MM/dd/yyyy",
            integerPattern: "#,##0",
            numberDecimalSeparator: ".",
            numberGroupingSeparator: ",",
            numberGroupingSeparatorUse: true,
            numberPattern: "#,##0.00" } } } });








    numberOfButton = wrapper.find('button').length;
    rowClass = wrapper.find('.row').length;
    divs = wrapper.find('div').length;
    thumbnails = wrapper.find(_Thumbnail2.default).length;
    startModals = wrapper.find(_StartModal2.default).length;
    wrapper.setState({ open: false });
    startModalState = wrapper.state('open');
    //console.log(wrapper.find('button'));
    wrapper.find('button').simulate('click');
  });

  it('To check how many time button exit in component', function () {
    expect(numberOfButton).toBe(1);
  });

  it('To check how many time row class exit in component', function () {
    expect(rowClass).toBe(4);
  });

  it('To check how many time div exit in component', function () {
    expect(divs).toBe(7);
  });

  it('To check how many time Thumbnail exit in component', function () {
    expect(thumbnails).toBe(2);
  });

  it('To check how many time StartModal exit in component', function () {
    expect(startModals).toBe(1);
  });

  it('To check the state of StartModal exit in component', function () {
    expect(startModalState).toBe(false);
  });

  // it('should dispatch action when clicking like', () => {
  //   const props = {
  //     body: 'Nice post!',
  //     author: 'Tiffany Wu',
  //     numberOfLikes: 10,
  //     onClickProcess: sinon.spy()
  //   };
  //   expect(props.onClickProcess.calledOnce).toBe(true);
  // });
});