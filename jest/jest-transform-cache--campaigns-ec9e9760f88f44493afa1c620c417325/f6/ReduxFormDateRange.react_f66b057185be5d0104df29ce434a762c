'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.default = undefined;var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _class, _temp2;var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _reduxForm = require('redux-form');
var _DatePicker = require('../Datepicker/DatePicker.react');var _DatePicker2 = _interopRequireDefault(_DatePicker);
var _DateConverter = require('opuscapita-i18n/lib/converters/DateConverter');var _DateConverter2 = _interopRequireDefault(_DateConverter);
var _reactIntl = require('react-intl');
var _lodash = require('lodash');var _lodash2 = _interopRequireDefault(_lodash);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

ReduxFormDateRange = (_temp2 = _class = function (_Component) {_inherits(ReduxFormDateRange, _Component);function ReduxFormDateRange() {var _ref;var _temp, _this, _ret;_classCallCheck(this, ReduxFormDateRange);for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReduxFormDateRange.__proto__ || Object.getPrototypeOf(ReduxFormDateRange)).call.apply(_ref, [this].concat(args))), _this), _this.







































    renderDateRange = function (fields) {var _this$props =
      _this.props,label = _this$props.label,fromFieldName = _this$props.fromFieldName,toFieldName = _this$props.toFieldName;var _this$context =
      _this.context,locale = _this$context.locale,formatPatterns = _this$context.formatPatterns;
      var fromHasError = !_lodash2.default.isEmpty(fields[fromFieldName].meta.error) && fields[fromFieldName].meta.touched;
      var toHasError = !_lodash2.default.isEmpty(fields[toFieldName].meta.error) && fields[toFieldName].meta.touched;
      return (
        _react2.default.createElement('div', { className: 'form-group ' + (fromHasError || toHasError ? 'has-error' : '') },
          _react2.default.createElement('label', { className: 'control-label col-sm-3' },
            label),

          _react2.default.createElement('div', { className: 'col-sm-1 text-right' }),
          _react2.default.createElement('div', { className: 'col-sm-8' },
            _react2.default.createElement('div', { className: 'input-group', style: { width: '100%' } },
              _react2.default.createElement(_DatePicker2.default, _extends({},
              fields[fromFieldName].input, {
                className: 'form-control',
                showIcon: false,
                name: fromFieldName,
                format: formatPatterns[locale].datePattern,
                locale: locale })),

              _react2.default.createElement('span', { className: 'input-group-addon' }, '\u2014'),
              _react2.default.createElement(_DatePicker2.default, _extends({},
              fields[toFieldName].input, {
                className: 'form-control',
                showIcon: false,
                name: toFieldName,
                format: formatPatterns[locale].datePattern,
                locale: locale })))),



          _this.renderErrors(fields)));


    }, _temp), _possibleConstructorReturn(_this, _ret);}_createClass(ReduxFormDateRange, [{ key: 'renderErrors', value: function renderErrors(fields) {var _props = this.props,fromFieldName = _props.fromFieldName,toFieldName = _props.toFieldName;var fromHasError = !_lodash2.default.isEmpty(fields[fromFieldName].meta.error) && fields[fromFieldName].meta.touched;var toHasError = !_lodash2.default.isEmpty(fields[toFieldName].meta.error) && fields[toFieldName].meta.touched;if (fromHasError || toHasError) {return _react2.default.createElement('div', { className: 'col-sm-offset-4' }, _react2.default.createElement('div', { className: 'col-sm-6' }, fromHasError && _react2.default.createElement('span', { className: 'label label-danger' }, _react2.default.createElement(_reactIntl.FormattedMessage, { id: fields[fromFieldName].meta.error }))), _react2.default.createElement('div', { className: 'col-sm-6' }, _react2.default.createElement('div', { className: 'col-sm-6' }, toHasError && _react2.default.createElement('span', { className: 'label label-danger' }, _react2.default.createElement(_reactIntl.FormattedMessage, { id: fields[toFieldName].meta.error })))));}return null;} }, { key: 'render', value: function render()

    {var _context =
      this.context,locale = _context.locale,formatPatterns = _context.formatPatterns;
      var dateConverter = new _DateConverter2.default(formatPatterns[locale].datePattern, locale);

      var parseDate = function parseDate(value, name) {
        try {
          return dateConverter.stringToValue(value);
        } catch (ignore) {
          return null;
        }
      };

      var formatDate = function formatDate(value, name) {
        try {
          return dateConverter.valueToString(value);
        } catch (ignore) {
          return null;
        }
      };var _props2 =
      this.props,fromFieldName = _props2.fromFieldName,toFieldName = _props2.toFieldName;

      return (
        _react2.default.createElement(_reduxForm.Fields, {
          parse: parseDate,
          format: formatDate,
          names: [fromFieldName, toFieldName],
          component: this.renderDateRange }));


    } }]);return ReduxFormDateRange;}(_react.Component), _class.propTypes = { fromFieldName: _react.PropTypes.string.isRequired, toFieldName: _react.PropTypes.string.isRequired, label: _react.PropTypes.string.isRequired }, _class.contextTypes = { locale: _react2.default.PropTypes.string.isRequired, formatPatterns: _react2.default.PropTypes.object.isRequired }, _temp2);exports.default = ReduxFormDateRange;