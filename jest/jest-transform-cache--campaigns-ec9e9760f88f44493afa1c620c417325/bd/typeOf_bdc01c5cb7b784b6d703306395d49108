"use strict";var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}; /**
                                                                                                                                                                                                                                                                                        * @depend util/core.js
                                                                                                                                                                                                                                                                                        */
/**
                                                                                                                                                                                                                                                                                            * Format functions
                                                                                                                                                                                                                                                                                            *
                                                                                                                                                                                                                                                                                            * @author Christian Johansen (christian@cjohansen.no)
                                                                                                                                                                                                                                                                                            * @license BSD
                                                                                                                                                                                                                                                                                            *
                                                                                                                                                                                                                                                                                            * Copyright (c) 2010-2014 Christian Johansen
                                                                                                                                                                                                                                                                                            */
(function (sinonGlobal) {
    "use strict";

    function makeApi(sinon) {
        function typeOf(value) {
            if (value === null) {
                return "null";
            } else if (value === undefined) {
                return "undefined";
            }
            var string = Object.prototype.toString.call(value);
            return string.substring(8, string.length - 1).toLowerCase();
        }

        sinon.typeOf = typeOf;
        return sinon.typeOf;
    }

    function loadDependencies(require, exports, module) {
        var core = require("./util/core");
        module.exports = makeApi(core);
    }

    var isNode = typeof module !== "undefined" && module.exports && typeof require === "function";
    var isAMD = typeof define === "function" && _typeof(define.amd) === "object" && define.amd;

    if (isAMD) {
        define(loadDependencies);
        return;
    }

    if (isNode) {
        loadDependencies(require, module.exports, module);
        return;
    }

    if (sinonGlobal) {
        makeApi(sinonGlobal);
    }
})(
(typeof sinon === "undefined" ? "undefined" : _typeof(sinon)) === "object" && sinon // eslint-disable-line no-undef
);