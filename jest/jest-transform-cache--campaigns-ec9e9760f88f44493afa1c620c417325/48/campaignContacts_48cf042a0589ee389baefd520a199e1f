'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;}; /* eslint-disable no-unused-vars */exports.default =




























campaignContactList;var _campaignContacts = require('../constants/campaignContacts');var _lodash = require('lodash');var _lodash2 = _interopRequireDefault(_lodash);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**
                                                                                                                                                                                                                                                                   * State of Campaign reducer:
                                                                                                                                                                                                                                                                   * {
                                                                                                                                                                                                                                                                   *     campaignContacts: [],
                                                                                                                                                                                                                                                                   *     error: {},
                                                                                                                                                                                                                                                                   *     selectedContact: {...}
                                                                                                                                                                                                                                                                   *     loading: true / false,
                                                                                                                                                                                                                                                                   *     importInProgress: true/false
                                                                                                                                                                                                                                                                   *     importResult: {failed: <n>, created: <k>, updated: <l>} n,k,l - numbers
                                                                                                                                                                                                                                                                   * }
                                                                                                                                                                                                                                                                   */function campaignContactList() {var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var action = arguments[1];switch (action.type) {case _campaignContacts.CAMPAIGN_CONTACTS_LOAD_START:return _extends({}, state, { loading: true });case _campaignContacts.CAMPAIGN_CONTACTS_LOAD_SUCCESS:return _extends({}, state, { loading: false,
        campaignContacts: action.campaignContacts });

    case _campaignContacts.CAMPAIGN_CONTACTS_LOAD_ERROR:
      return _extends({},
      state, {
        loading: false,
        error: action.error });

    case _campaignContacts.SELECT_CAMPAIGN_CONTACT: // use this state for selecting existing contact and initiating creating new one
      var selectedContact = _lodash2.default.find(state.campaignContacts, { campaignId: action.campaignId, email: action.email });
      return _extends({},
      state, {
        selectedContact: _lodash2.default.isEmpty(selectedContact) ? { campaignId: action.campaignId } : selectedContact });

    case _campaignContacts.REMOVE_CAMPAIGN_CONTACT_SELECTION:
      return _extends({},
      state, {
        selectedContact: undefined });

    case _campaignContacts.CAMPAIGN_CONTACT_UPDATE_SUCCESS:
      var updatedContacts = _lodash2.default.cloneDeep(state.campaignContacts);
      var updatedContactIdx = _lodash2.default.findIndex(updatedContacts, {
        campaignId: action.contact.campaignId,
        email: action.contact.email });

      updatedContacts[updatedContactIdx] = action.contact;
      return _extends({},
      state, {
        campaignContacts: updatedContacts,
        selectedContact: action.contact });

    case _campaignContacts.CAMPAIGN_CONTACT_CREATE_SUCCESS:
      return _extends({},
      state, {
        selectedContact: action.contact,
        campaignContacts: _lodash2.default.concat(state.campaignContacts, action.contact) });

    case _campaignContacts.CAMPAIGN_CONTACT_DELETE_SUCCESS:
      return _extends({},
      state, {
        selectedContact: undefined,
        campaignContacts: _lodash2.default.reject(state.campaignContacts, { campaignId: action.campaignId, email: action.email }) });

    case _campaignContacts.CAMPAIGN_CONTACTS_IMPORT_START:
      return _extends({},
      state, {
        importInProgress: true });

    case _campaignContacts.CAMPAIGN_CONTACTS_IMPORT_SUCCESS:
      return _extends({},
      state, {
        importInProgress: false,
        importResult: action.importResult });

    case _campaignContacts.RESET_IMPORT_INFO:
      return _extends({},
      state, {
        importInProgress: undefined,
        importResult: undefined });

    default:
      return state;}

}