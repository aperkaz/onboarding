version: '3'
services:
  main:
    environment:
      APPLICATION_NAME: 'onboarding'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
    depends_on:
      - mysql
      - redis
      - registrator
      - einvoice-send
      - notification
    labels:
      - 'SERVICE_3002_CHECK_HTTP=/api/health/check'
      - 'SERVICE_3002_CHECK_INTERVAL=15s'
      - 'SERVICE_3002_CHECK_TIMEOUT=3s'
      - 'SERVICE_3002_NAME=onboarding'
      - 'SERVICE_TAGS=external,kong'
    ports:
      - '3002:3002'

  postgres:
    image: postgres:9.4
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: $POSTGRES_DB
      POSTGRES_DB: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    depends_on:
      - registrator

  test:
     image: ocbesbn/selenium
     network_mode: host
     environment:
       APPLICATION_NAME: 'onboarding' #please make sure those envs are the same as in main
       EXTERNAL_HOST: localhost
       EXTERNAL_PORT: 8080
     extra_hosts:
       - 'consul:${HOST_IP}'
     depends_on:
       - main
       - user
       - apigw
       - mysql
       - email
       - auth
     volumes:
       - ./test:/home/seluser/test
       - /dev/shm:/dev/shm # shared memory for chrome, it takes more ram than docker gives
       - /tmp:/home/seluser/result

  user:
    image: opuscapita/user:dev
#    build: ../user
#    volumes:
#      - ../user:/home/node/user
    depends_on:
     - mysql
     - consul
     - registrator
    labels:
      SERVICE_NAME: 'user'
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      REDIS_AUTH: $REDIS_AUTH
      USER_NAME: 'user'
      PASSWORD: 'svc_user'
    ports:
     - '3008:3008'
    command: 'npm run dev'

  kong:
    image: opuscapita/kong:dev
#    volumes:
#      - .:/usr/local/kong/logs
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_PORT: $KONG_PG_PORT
      APP_HOST: $HOST_IP
      APP_HOST_PROTOCOL: $APP_HOST_PROTOCOL
      APP_HOST_PORT: $APP_HOST_PORT
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      LOG_PORT: 5000
      LOG_HOST: $LOG_HOST
      ACL_HOST: $ACL_HOST
      ACL_PORT: $ACL_PORT
      REDIS_HOST: $HOST_IP # TODO: remove after api-gw is using config
      REDIS_PORT: 6379 # TODO: remove after api-gw is using config
      REDIS_AUTH: $REDIS_AUTH # TODO: remove after api-gw is using config
      SERVICE_8001_NAME: 'kong'
      SERVICE_8080_NAME: 'kong-http'
    ports:
      - '8080:8080'
      - '8443:8443'
      - '8001:8001'
      - '7946:7946'
      - '7946:7946/udp'
    depends_on:
      - postgres
      - mysql

  auth:
    image: opuscapita/auth:dev
#    build: ../auth
#    volumes:
#      - ../auth:/home/node/auth
    ports:
     - '$APP_HOST_PORT:$APP_HOST_PORT'
    environment:
      NODE_ENV: $NODE_ENV
      APP_HOST: '0.0.0.0'
      APP_HOST_PROTOCOL: $APP_HOST_PROTOCOL
      APP_HOST_PORT: $APP_HOST_PORT
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      REDIS_AUTH: ${REDIS_AUTH}
      USER_NAME: 'auth'
      PASSWORD: 'svc_auth'
    depends_on:
      - kong
      - consul
    command: 'npm run dev'

  customer:
    image: opuscapita/customer:dev
    depends_on:
      - mysql
      - consul
      - registrator
    #volumes:
    #  - ../customer:/home/node/customer
    labels:
      SERVICE_NAME: 'customer'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    ports:
      - '3009:3009'
    command: 'npm run dev:production'

  blob:
#    build: ../blob
    image: opuscapita/blob:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
    labels:
      SERVICE_NAME: 'blob'
      SERVICE_TAGS: 'external'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
      BLOB_ACCOUNT: ${BLOB_ACCOUNT}
      BLOB_KEY: ${BLOB_KEY}
    ports:
      - '3012:3012'
    command: 'npm run dev:production'

  isodata:
    image: opuscapita/isodata:dev
#    build: '../isodata'
#    volumes:
#      - ../isodata:/home/node/isodata
    depends_on:
      - mysql
      - consul
      - registrator
    ports:
      - '3006:3006'
    labels:
      SERVICE_NAME: isodata
      SERVICE_TAGS: 'external'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command: 'npm run dev:production'

  acl:
    image: opuscapita/acl:dev
    labels:
      - 'SERVICE_NAME=acl'
      - 'SERVICE_TAGS=external,kong'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
     - '3013:3013'
    depends_on:
      - kong
    command: 'npm run dev'

  notification:
    image: opuscapita/notification:dev  
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
    labels:
      SERVICE_NAME: 'notification'
    environment:
      SERVICE_3011_CHECK_HTTP: /api/health/check
      SERVICE_3011_CHECK_INTERVAL: 15s
      SERVICE_3011_CHECK_TIMEOUT: 3s
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    ports:
      - '3011:3011'
    command: 'npm run dev'

  einvoice-send:
    image: opuscapita/einvoice-send:dev
    depends_on:
     - mysql
     - consul
     - registrator
     - redis
     - kong
    labels:
      SERVICE_NAME: 'einvoice-send'
      SERVICE_TAGS: 'external'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    ports:
     - '3007:3007'
    command: 'npm run dev'

  api-registry:
    image: opuscapita/api-registrator:dev
#    build: ../api-registrator
    ports:
      - '$API_REGISTRY_PORT:$API_REGISTRY_PORT'
    environment:
      AUTH_SERVER: $AUTH_SERVER
      AUTH_SERVER_PORT: $AUTH_SERVER_PORT
      API_REGISTRY_PORT: $API_REGISTRY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
    depends_on:
      - kong

  email:
    image: opuscapita/email:dev
#    build: ../email
#    volumes:
#      - ../email:/home/node/email
    environment:
      NODE_ENV: 'production'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    depends_on:
      - registrator
    command: 'npm run dev:production'

#  maildev:
#    image: djfarrelly/maildev
#    ports:
#      - '1080:80' # UI PORT
#      - '1025:25' # SMTP PORT
#    labels:
#      SERVICE_IGNORE: 'true'

  mysql:
    image: 'mysql:5.6'
    command: ['--character-set-server=utf8', '--collation-server=utf8_general_ci']
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    depends_on:
      - registrator

  redis:
    image: 'opuscapita/redis:dev'
    environment:
      REDIS_AUTH: $REDIS_AUTH
    depends_on:
      - registrator
    ports:
      - $REDIS_PORT:$REDIS_PORT

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul

  consul:
    image: consul:latest
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'  # Do not add any of Consul's services to Consul's service discovery registry.
    command: [agent, '-server', '-ui', '-bootstrap', '-client=0.0.0.0']
