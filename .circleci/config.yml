version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8
    working_directory: ~/onboarding

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Build Docker image
          command: docker build -t opuscapita/${CIRCLE_PROJECT_REPONAME}:latest .

      - deploy:
          name: deploy branch
          command: |
            if [[ "${CIRCLE_BRANCH}" == "develop" || "${CIRCLE_BRANCH}" == "master" ]]; then
              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[CIRCLE_JOB]=deploy_$CIRCLE_BRANCH \
                --data revision=$CIRCLE_SHA1 \
                https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/tree/${CIRCLE_BRANCH}
            fi

  build_base:
    docker:
      - image: circleci/node:8
    working_directory: ~/onboarding

    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Build and push Docker base image
          command: |
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:base -f Dockerfile.base .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:base


  deploy_develop:
    docker:
      - image: circleci/node:8
    working_directory: ~/onboarding

    steps:
      - checkout

      - run:
          name: commit new version
          command: |
            version=`cat VERSION`-dev-$CIRCLE_BUILD_NUM
            git config --global user.email "ci@circleci.com"
            git config --global user.name "CI"
            git tag -a "$version" -m "$version"
            git push --tags

      - setup_remote_docker

      - run:
          name: Build and push Docker image
          command: |
            version=`cat VERSION`-dev-$CIRCLE_BUILD_NUM
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:$version --build-arg CI="true"  .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:$version

      - run:
          name: deploy new image to dev
          command: |
            version=`cat VERSION`-dev-$CIRCLE_BUILD_NUM
            curl https://raw.githubusercontent.com/gr4per/azureswarm/master/deploy_service.sh > deploy_service.sh
            chmod +x deploy_service.sh
            ./deploy_service.sh dm develop opuscapita/$CIRCLE_PROJECT_REPONAME $version

      - run:
          name: Integrations tests
          command: |
            if docker run -it -e "TESTING_URL=http://52.233.155.169" opuscapita/test-flow; then
              echo "Integration tests passed"
            else
              curl https://raw.githubusercontent.com/gr4per/azureswarm/master/rollback_service.sh > rollback_service.sh
              chmod +x rollback_service.sh
              ./rollback_service.sh dm 52.233.155.169 opuscapita/$CIRCLE_PROJECT_REPONAME
              exit 1
            fi

      - run:
          name: Deploy latest working dev image
          command: |
            version=`cat VERSION`-dev-$CIRCLE_BUILD_NUM
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:$version --build-arg CI="true"  .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag opuscapita/$CIRCLE_PROJECT_REPONAME:$version opuscapita/$CIRCLE_PROJECT_REPONAME:dev
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:dev

      - run:
          name: Merge develop to master
          command: git push origin develop:master


  deploy_master:
    docker:
      - image: circleci/node:8
    working_directory: ~/onboarding

    steps:
      - checkout

      - run:
          name: commit new version
          command: |
            version=`cat VERSION`-rc-$CIRCLE_BUILD_NUM
            git config --global user.email "ci@circleci.com"
            git config --global user.name "CI"
            git tag -a "$version" -m "$version"
            git push --tags

      - setup_remote_docker

      - run:
          name: Build and push Docker image
          command: |
            version=`cat VERSION`-rc-$CIRCLE_BUILD_NUM
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:$version --build-arg CI="true"  .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:$version

      - run:
          name: deploy new image to staging
          command: |
            version=`cat VERSION`-rc-$CIRCLE_BUILD_NUM
            curl https://raw.githubusercontent.com/gr4per/azureswarm/master/deploy_service.sh > deploy_service.sh
            chmod +x deploy_service.sh
            ./deploy_service.sh dm stage opuscapita/$CIRCLE_PROJECT_REPONAME $version

#      - run:
#          name: Integrations tests
#          command: |
#            if docker run -it -e "TESTING_URL=http://52.233.155.169" opuscapita/test-flow; then
#              echo "Integration tests passed"
#            else
#              curl https://raw.githubusercontent.com/gr4per/azureswarm/master/rollback_service.sh > rollback_service.sh
#              chmod +x rollback_service.sh
#              ./rollback_service.sh dm 52.233.155.169 opuscapita/$CIRCLE_PROJECT_REPONAME
#              exit 1
#            fi

      - run:
          name: Build and push Docker image
          command: |
            version=`cat VERSION`
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:latest --build-arg CI="true"  .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag opuscapita/$CIRCLE_PROJECT_REPONAME:latest opuscapita/$CIRCLE_PROJECT_REPONAME:$version
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:latest
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:$version

      - run:
          name: Bump VERSION on develop
          command: |
            git branch develop
            docker run --rm -v "$PWD":/app treeder/bump patch
            version=`cat VERSION`
            git add -A
            git commit -m "$version [ci skip]"
            git tag -a "$version" -m "$version"
            git push
            git push --tags

