version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8
    working_directory: ~/build

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create source volume
          command: |
           docker volume create sourceVolume
           # creating dummy container which will hold a volume with source
           docker create -v sourceVolume:/src --name sourceContainer alpine:3.4 /bin/true
           # copying source file into this volume
           docker cp src sourceContainer:/
      - run:
          name: Run Onboarding
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.integration-test.yml up -d
      - run:
         name: Run tests
         command: |
           # creating dummy container which will hold a volume with specs
           docker create -v /test --name specs alpine:3.4 /bin/true
           # copying specs file into this volume
           docker cp test specs:/
           # starting application container using this volume
           docker run --volumes-from specs --net=host -e 'DISPLAY=:99.0' -e 'APPLICATION_NAME=onboarding' -e 'EXTERNAL_HOST=localhost' -e 'EXTERNAL_PORT=8080' ocbesbn/selenium:latest
      - run: |
          # once application container finishes we can copy artifacts directly from it
          docker cp specs:/home/seluser/result /tmp
      - run:
          name: End testing
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.ci.yml stop
      - run:
          name: Deployment script
          command: |
            export azureswarm_branch=develop
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then export azureswarm_branch=master; fi
            curl https://raw.githubusercontent.com/gr4per/azureswarm/$azureswarm_branch/buildscript.sh > buildscript.sh
            chmod +x buildscript.sh
            ./buildscript.sh opuscapita/$CIRCLE_PROJECT_REPONAME

  build_base:
    docker:
      - image: circleci/node:8
    working_directory: ~/build

    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Build and push Docker base image
          command: |
            docker build -t opuscapita/$CIRCLE_PROJECT_REPONAME:base -f Dockerfile.base .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push opuscapita/$CIRCLE_PROJECT_REPONAME:base

